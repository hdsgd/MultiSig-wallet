{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_owners",
						"type": "address[]"
					},
					{
						"internalType": "uint256",
						"name": "_numConfirmationsRequired",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "txIndex",
						"type": "uint256"
					}
				],
				"name": "ConfirmTransaction",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "txIndex",
						"type": "uint256"
					}
				],
				"name": "ExecuteTransaction",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnerChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "txIndex",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "SubmitTransaction",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "addOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_txIndex",
						"type": "uint256"
					}
				],
				"name": "confirmTransaction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "confirmationsByUser",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_txIndex",
						"type": "uint256"
					}
				],
				"name": "executeTransaction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOwners",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_txIndex",
						"type": "uint256"
					}
				],
				"name": "getTransaction",
				"outputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					},
					{
						"internalType": "bool",
						"name": "executed",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "numConfirmations",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTransactionCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "numConfirmationsRequired",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "owners",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "submitTransaction",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_removeOwner",
						"type": "address"
					}
				],
				"name": "swapOwner",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "transactions",
				"outputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					},
					{
						"internalType": "bool",
						"name": "executed",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "numConfirmations",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_newValue",
						"type": "uint256"
					}
				],
				"name": "updateConfirmationsRequired",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Gustavo Henrique / gustavohenrisantos@gmail.com",
			"kind": "dev",
			"methods": {
				"addOwner(address)": {
					"params": {
						"_newOwner": "Novo votante"
					}
				},
				"confirmTransaction(uint256)": {
					"params": {
						"_txIndex": "Índice da proposta de votação"
					}
				},
				"constructor": {
					"details": "Definição de parametros :  {_owners} -> Array de votantes  {_numConfirmationsRequired} -> Número de confirmações necessárias para aprovação"
				},
				"executeTransaction(uint256)": {
					"params": {
						"_txIndex": "Índice da proposta de votação"
					}
				},
				"getOwners()": {
					"returns": {
						"_0": "Array de votantes"
					}
				},
				"getTransaction(uint256)": {
					"params": {
						"_txIndex": "Índice da proposta de votação"
					},
					"returns": {
						"data": "Data a ser executado ou executado",
						"executed": "Bool de confirmação de execução de transação false -> não executada",
						"numConfirmations": "Número de confirmações já realizadas",
						"to": "endereço de execução da transação proposta"
					}
				},
				"getTransactionCount()": {
					"returns": {
						"_0": "Uint de quantidade"
					}
				},
				"submitTransaction(address,bytes)": {
					"details": "É necessário que o número mínimo de aprovações seja atingido",
					"params": {
						"_data": "Data para ser executado , exemplo em contrato anexo ERC20 getPauseData()   ",
						"_to": "Endereço para onde será executado"
					}
				},
				"swapOwner(address,address)": {
					"params": {
						"_newOwner": "Novo votante",
						"_removeOwner": "Votante a ser removido"
					}
				},
				"updateConfirmationsRequired(uint256)": {
					"params": {
						"_newValue": "Número de aprovações necessárias"
					}
				}
			},
			"title": "Carteira Multisig para execução de operações em contratos",
			"version": 1
		},
		"userdoc": {
			"events": {
				"ConfirmTransaction(address,uint256)": {
					"notice": "Transação confirmada"
				},
				"ExecuteTransaction(address,uint256)": {
					"notice": "Transação executada"
				},
				"OwnerChanged(address)": {
					"notice": "Alteração de owner"
				},
				"SubmitTransaction(address,uint256,address,bytes)": {
					"notice": "Transação a ser executada adicionada"
				}
			},
			"kind": "user",
			"methods": {
				"addOwner(address)": {
					"notice": "Método para adição de carteira votante"
				},
				"confirmTransaction(uint256)": {
					"notice": "Método para confirmar nova transação , voto"
				},
				"confirmationsByUser(uint256,address)": {
					"notice": "Checagem de confirmação de uma proposta usando índice e carteira votante"
				},
				"executeTransaction(uint256)": {
					"notice": "Método para executar transação"
				},
				"getOwners()": {
					"notice": "Método para retornar array de votantes"
				},
				"getTransaction(uint256)": {
					"notice": "Método para retornar quantidade de propostas"
				},
				"getTransactionCount()": {
					"notice": "Método para retornar quantidade de propostas"
				},
				"isOwner(address)": {
					"notice": "Mapping para verificação de se wallet é votante"
				},
				"numConfirmationsRequired()": {
					"notice": "Número de confirmações necessárias"
				},
				"owners(uint256)": {
					"notice": "Array de votantes"
				},
				"submitTransaction(address,bytes)": {
					"notice": "Método para submeter nova transação"
				},
				"swapOwner(address,address)": {
					"notice": "Método para troca de carteiras votantes"
				},
				"updateConfirmationsRequired(uint256)": {
					"notice": "Método para alteração de número mínimo de confirmações"
				}
			},
			"notice": "MultiSigWallet",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Contracts/Multisig.sol": "MultiSigWallet"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Contracts/Multisig.sol": {
			"keccak256": "0x7822ffb4182182e9d5fcafdef1240bbd5c81d51eed4d807ed0b7e1b79d4dee42",
			"license": "MIT",
			"urls": [
				"bzz-raw://bc09ddd9dac3ede1fc2d5ca30c3e0fa529a5aaa93b76c61ca314b31cc8b545a2",
				"dweb:/ipfs/QmNT6H8ww4zUwBvpPRGyQ96jRpEjBYKNjEppPVUL4cqrLK"
			]
		}
	},
	"version": 1
}